# ABC206 - C

# 文章に直すと「与えられた数列のうち、値が相異なる2つの要素の番号(インデックス)の組み合わせの数を求めよ」というもの
# 愚直に2組の添え字を全列挙で求めていくとすると、N*(N-1)/2 ≒ O(N^2) もの計算量となるため、処理が間に合わない

# そこで、問題をより掘り下げてみる
# 値が相異なる2つの要素の組み合わせ……というのは、要するにある数XとX以外の数￢Xである
# つまり値がXでない要素の番号すべて、すなわちXでない要素の数だけ組み合わせが存在するということになる
# すると、値が同じ要素とその数ごとに数列を整理し、ある値を持つ要素の数を全体の数から引いたもので作ることのできる
# 組み合わせの数を求め、数え上げていけばそれが答えとなる
# なお組み合わせには、条件の関係上同じ番号同士の組み合わせは絶対に発生しないので
# (3,4)と(4,3)のような重複パターンを最後に一括して二分して計算することができるため、
# 計算速度のさらなる向上のため、ここでは出力時に後回しにしている

from collections import Counter

N = int(input())
A = sorted([int(x) for x in input().split()])
A_data = Counter(A) # ある数とその出現回数ごとに数列を整理
ans = 0
#print(A); print(A_data)

for ele in A:
    #print(ele,A_data[ele],":",N-A_data[ele])
    ans += (N - A_data[ele]) # (全体の要素数 - 取り出した値の出現回数) = 条件に適合する要素の数(重複含む)

print(ans//2) # (i,j) (j,i)のような2回数え上げている部分を÷2して調整