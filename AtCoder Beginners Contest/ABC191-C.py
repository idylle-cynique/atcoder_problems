# ABC191 - C

#   問題文が非常に分かりにくく、サンプルケースも乏しいため問題の意図が掴みにくいが、
# 　要するにマスパターンの凹凸をチェックして何角形なのか調べろ、ということ
#   何角形なのかは、頂点の数を数え上げれば分かるので、受け取ったマス情報を全探索し
#   探索位置から2×2マスの範囲における多角形部分とそれ以外とをチェックして
#   以下のようなパターンが確認されたとき、頂点として数え上げていけばよい
#
#   1) 凸型の頂点パターン (多角形部分が1つ確認されたとき)
#   ..      ..      #.      .#
#   .#      #.      ..      ..
#
#   2) 凹型の頂点パターン (多角形部分が3つ確認されたとき)
#   ##      ##      .#      #.
#   #.      .#      ##      ##

H, W = map(int, input().split())
GRID = []

dx = [ 0,+1, 0,+1] # 探索用のX軸インデックス調整値リスト
dy = [ 0, 0,+1,+1] # 探索用のY軸インデックス調整値リスト
edge = 0    # 頂点の数

for i in range(H): # マスの情報を受け取る
    s = list(input())
    GRID.append(s)
    
for i in range(H-1): # -1としないと out of index error
    for j in range(W-1):
        cnt = 0
        for k in range(len(dx)): # マスパターンを調べる
            if GRID[i+dy[k]][j+dx[k]] == "#":
                cnt += 1
        
        if cnt == 1 or cnt == 3: # 頂点とみなせるようなマスパターンならカウント
            edge += 1
            
print(edge)