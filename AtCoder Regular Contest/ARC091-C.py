# ARC091 - C

# 実際に問題通りにシミュレートすることによって、以下のことがわかった
# n=1, m=1のとき: 1のマスがひとつできる
# n,mのいずれかもしくは両方が2のとき: すべてのマスが0になる
# それ以外のとき:マスの外側だけが0になり、内側のマスはすべて1になる

# あとはこの条件通りに実装すればよい
# 入力値を検めるだけで解が求まるので、きわめて高速に処理が可能

n,m = map(int,input().split())

if n == 1 and m == 1: # n,m の両方が1であるとき
    print(1)
    exit()

if n == 2 or m == 2:  # n,m のいずれか、もしくは両方が2であるとき
    print(0)
    exit()
    
if n > 2 or m > 2:
        # n=3, m=1のようなときはそのままm-2とすると負数になってしまうので注意する必要がある
    x = max(1,n-2) 
    y = max(1,m-2)
    print(x*y)
    exit()